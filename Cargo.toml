[package]
name = "iroh-blobs"
version = "0.30.0"
edition = "2021"
readme = "README.md"
description = "blob and collection transfer support for iroh"
license = "MIT OR Apache-2.0"
authors = ["dignifiedquire <me@dignifiedquire.com>", "n0 team"]
repository = "https://github.com/n0-computer/iroh-blobs"
keywords = ["hashing", "quic", "blake3"]

# Sadly this also needs to be updated in .github/workflows/ci.yml
rust-version = "1.81"

[dependencies]
anyhow = { version = "1" }
async-channel = "2.3.1"
bao-tree = { version = "0.13", features = [
    "tokio_fsm",
    "validate",
], default-features = false }
blake3 = { version = "1.4.5", package = "iroh-blake3" }
bytes = { version = "1.7", features = ["serde"] }
chrono = "0.4.31"
clap = { version = "4.5.20", features = ["derive"], optional = true }
data-encoding = { version = "2.3.3" }
derive_more = { version = "1.0.0", features = [
    "debug",
    "display",
    "deref",
    "deref_mut",
    "from",
    "try_into",
    "into",
] }
futures-buffered = "0.2.4"
futures-lite = "2.3"
futures-util = { version = "0.3.30", optional = true }
genawaiter = { version = "0.99.1", features = ["futures03"] }
hashlink = { version = "0.9.0", optional = true }
hex = "0.4.3"
indicatif = { version = "0.17.8", optional = true }
iroh-base = { version = "0.31" }
iroh-io = { version = "0.6.0", features = ["stats"] }
iroh-metrics = { version = "0.31", default-features = false }
iroh = "0.31"
nested_enum_utils = { version = "0.1.0", optional = true }
num_cpus = "1.15.0"
oneshot = "0.1.8"
parking_lot = { version = "0.12.1", optional = true }
portable-atomic = { version = "1", optional = true }
postcard = { version = "1", default-features = false, features = [
    "alloc",
    "use-std",
    "experimental-derive",
] }
quic-rpc = { version = "0.17.3", optional = true }
quic-rpc-derive = { version = "0.17", optional = true }
quinn = { package = "iroh-quinn", version = "0.12", features = ["ring"] }
rand = "0.8"
range-collections = "0.4.0"
redb = { version = "2.2.0", optional = true }
reflink-copy = { version = "0.1.8", optional = true }
self_cell = "1.0.1"
serde = { version = "1", features = ["derive"] }
serde-error = "0.1.3"
smallvec = { version = "1.10.0", features = ["serde", "const_new"] }
strum = { version = "0.26.3", optional = true }
ssh-key = { version = "0.6", optional = true, features = ["ed25519"] }
tempfile = { version = "3.10.0", optional = true }
thiserror = "2"
tokio = { version = "1", features = ["fs"] }
tokio-util = { version = "0.7", features = ["io-util", "io"] }
tracing = "0.1"
tracing-futures = "0.2.5"
walkdir = { version = "2.5.0", optional = true }

# Examples
console = { version = "0.15.8", optional = true }

[dev-dependencies]
http-body = "1.0"
iroh-test = { version = "0.31" }
iroh = { version = "0.31", features = ["test-utils"] }
futures-buffered = "0.2.4"
proptest = "1.0.0"
serde_json = "1.0.107"
serde_test = "1.0.176"
testresult = "0.4.0"
tokio = { version = "1", features = ["macros", "test-util"] }
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
rcgen = "0.13"
rustls = { version = "0.23", default-features = false, features = ["ring"] }
tempfile = "3.10.0"
futures-util = "0.3.30"
testdir = "0.9.1"

[features]
default = ["fs-store", "net_protocol"]
downloader = ["dep:parking_lot", "tokio-util/time", "dep:hashlink"]
net_protocol = ["downloader", "dep:futures-util"]
fs-store = ["dep:reflink-copy", "redb", "dep:tempfile"]
metrics = ["iroh-metrics/metrics"]
redb = ["dep:redb"]
cli = ["rpc", "dep:clap", "dep:indicatif", "dep:console"]
rpc = [
  "dep:quic-rpc",
  "dep:quic-rpc-derive",
  "dep:nested_enum_utils",
  "dep:strum",
  "dep:futures-util",
  "dep:portable-atomic",
  "dep:walkdir",
  "dep:ssh-key",
  "downloader",
]

example-iroh = [
  "dep:clap",
  "dep:indicatif",
  "dep:console",
  "iroh/discovery-local-network"
]
test = ["quic-rpc/quinn-transport", "quic-rpc/test-utils"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "iroh_docsrs"]

[[example]]
name = "provide-bytes"

[[example]]
name = "fetch-fsm"

[[example]]
name = "fetch-stream"

[[example]]
name = "transfer"
required-features = ["rpc"]

[[example]]
name = "hello-world-fetch"
required-features = ["example-iroh"]

[[example]]
name = "hello-world-provide"
required-features = ["example-iroh"]

[[example]]
name = "local-swarm-discovery"
required-features = ["example-iroh"]

[[example]]
name = "custom-protocol"
required-features = ["example-iroh"]

[lints.rust]
missing_debug_implementations = "warn"

# We use this --cfg for documenting the cargo features on which an API
# is available.  To preview this locally use: RUSTFLAGS="--cfg
# iroh_docsrs cargo +nightly doc --all-features".  We use our own
# iroh_docsrs instead of the common docsrs to avoid also enabling this
# feature in any dependencies, because some indirect dependencies
# require a feature enabled when using `--cfg docsrs` which we can not
# do.  To enable for a crate set `#![cfg_attr(iroh_docsrs,
# feature(doc_cfg))]` in the crate.
unexpected_cfgs = { level = "warn", check-cfg = ["cfg(iroh_docsrs)"] }

[lints.clippy]
unused-async = "warn"

[profile.dev-ci]
inherits = 'dev'
opt-level = 1

[profile.optimized-release]
inherits = 'release'
debug = false
lto = true
debug-assertions = false
opt-level = 3
panic = 'abort'
incremental = false
