(function() {
    var type_impls = Object.fromEntries([["iroh_blobs",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-WithChannels%3CI,+S%3E\" class=\"impl\"><a href=\"#impl-Debug-for-WithChannels%3CI,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for WithChannels&lt;I, S&gt;<div class=\"where\">where\n    I: Channels&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    S: Service,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","iroh_blobs::api::downloader::DownloadMsg"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-WithChannels%3CI,+S%3E\" class=\"impl\"><a href=\"#impl-Deref-for-WithChannels%3CI,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for WithChannels&lt;I, S&gt;<div class=\"where\">where\n    I: Channels&lt;S&gt;,\n    S: Service,</div></h3></section></summary><div class=\"docblock\"><p>Deref so you can access the inner fields directly.</p>\n<p>If the inner message has fields named <code>tx</code>, <code>rx</code> or <code>span</code>, you need to use the\n<code>inner</code> field to access them.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = I</h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; &amp;&lt;WithChannels&lt;I, S&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","iroh_blobs::api::downloader::DownloadMsg"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(I,+Tx)%3E-for-WithChannels%3CI,+S%3E\" class=\"impl\"><a href=\"#impl-From%3C(I,+Tx)%3E-for-WithChannels%3CI,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, S, Tx&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(I, Tx)</a>&gt; for WithChannels&lt;I, S&gt;<div class=\"where\">where\n    I: Channels&lt;S, Rx = NoReceiver&gt;,\n    S: Service,\n    &lt;I as Channels&lt;S&gt;&gt;::Tx: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Tx&gt;,</div></h3></section></summary><div class=\"docblock\"><p>Tuple conversion from inner message and tx channel to a WithChannels struct</p>\n<p>For the very common case where you just need a tx channel to send the response to.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(inner: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(I, Tx)</a>) -&gt; WithChannels&lt;I, S&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(I, Tx)>","iroh_blobs::api::downloader::DownloadMsg"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(I,+Tx,+Rx)%3E-for-WithChannels%3CI,+S%3E\" class=\"impl\"><a href=\"#impl-From%3C(I,+Tx,+Rx)%3E-for-WithChannels%3CI,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, S, Tx, Rx&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(I, Tx, Rx)</a>&gt; for WithChannels&lt;I, S&gt;<div class=\"where\">where\n    I: Channels&lt;S&gt;,\n    S: Service,\n    &lt;I as Channels&lt;S&gt;&gt;::Tx: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Tx&gt;,\n    &lt;I as Channels&lt;S&gt;&gt;::Rx: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Rx&gt;,</div></h3></section></summary><div class=\"docblock\"><p>Tuple conversion from inner message and tx/rx channels to a WithChannels struct</p>\n<p>For the case where you want both tx and rx channels.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(inner: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(I, Tx, Rx)</a>) -&gt; WithChannels&lt;I, S&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(I, Tx, Rx)>","iroh_blobs::api::downloader::DownloadMsg"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WithChannels%3CI,+S%3E\" class=\"impl\"><a href=\"#impl-WithChannels%3CI,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, S&gt; WithChannels&lt;I, S&gt;<div class=\"where\">where\n    I: Channels&lt;S&gt;,\n    S: Service,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.parent_span_opt\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">parent_span_opt</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;Span&gt;</h4></section></summary><div class=\"docblock\"><p>Get the parent span</p>\n</div></details></div></details>",0,"iroh_blobs::api::downloader::DownloadMsg"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[8372]}